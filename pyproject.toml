[project]
name = "interpolation-iitp"
version = "0.1.0"
description = "A python project demostrating basic interpolation methods."
authors = [
    { name = "sofiadorogova", email = "113040802+sofiadorogova@users.noreply.github.com" }
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21,<2.0",
    "matplotlib>=3.5,<4.0",
    "ruff (>=0.9.7,<0.10.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
  { include = "interpolation_package" }
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"

[tool.ruff]
# Группы правил (или конкретные префиксы), которые мы включаем.
# - "E" и "F" покрывают многие типичные ошибки, аналогично pycodestyle и pyflakes.
# - "B" (flake8-bugbear) добавляет проверку на частые конструкции, вызывающие баги.
# - "I" (исправление импортов, упорядочивание) встроено в Ruff (аналог isort).
# - "C90" может помочь с некоторыми проверками совместимости.
select = ["E", "F", "B", "I", "C90"]

# Если нужно отключить какие-то правила, можно добавить в ignore, например:
# - "F401" ~ "импорт, но не используется" (обычно полезно видеть, но иногда мешает)
# - "E501" ~ "строка слишком длинная" (если полагаетесь на black-style форматирование)
ignore = [
  # "F401"
]

# Разрешаем Ruff автоматически исправлять всё, что он умеет
fixable = ["ALL"]

# Лимит длины строки (аналогично black и PEP 8)
line-length = 88
